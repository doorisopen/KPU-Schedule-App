{"version":3,"sources":["LectureAdd/LectureAddButton.js","Lecture.js","LectureAdd/LectureAddTemplate.js","LectureAdd/LectureRemoveButton.js","LectureAdd/LectureItem.js","LectureAdd/LectureList.js","Major.js","Pagination.js","App.js","index.js"],"names":["LectureAddButton","currentLectures","lectureItem","lectureAdd","onClick","event","index","findIndex","lecture","lectureIdx","Item","selected","disabled","Lecture","this","props","lectureName","lectureSemester","lectureDate","professorName","lectureCode","className","Component","LectureAddTemplate","children","width","LectureRemoveButton","lectureRemove","LectureItem","LectureList","lectureItems","isItemAdd","map","key","Major","lectures","changeMajor","onChange","target","value","majorName","majorCode","major","Pagination","currentPage","postsPerPage","totalPosts","paginate","totalPage","i","Math","ceil","push","length","App","state","url","gubun","currentMajor","btn1Disabled","btn2Disabled","btn1Color","btn2Color","isLoading","majorLectureLoading","lecturesSave","getLectures","a","async","settingData","axios","get","data","forEach","setState","getMajorLectures","majorLectures","includes","onclick","indexOfLastLecture","indexOfFirstLecture","slice","btn1Selected","btn2Selected","lectureAddItems","concat","console","log","onChangeButton1","style","color","onChangeButton2","lectureGubun","code","lectureYear","pageNumber","filter","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.94c54497.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst LectureAddButton = ({currentLectures, lectureItem, lectureAdd}) => {\r\n\r\n    return (\r\n        <button onClick={(event) => {\r\n            // 선택된 데이터의 Index 찾는다.\r\n            const index = currentLectures.findIndex(lecture => \r\n                lecture.lectureIdx === lectureItem.Item.lectureIdx);\r\n            currentLectures[index].selected = true;\r\n\r\n            // lectureItem 추가 및 배열 갱신\r\n            lectureAdd(lectureItem);\r\n        }}\r\n        disabled={lectureItem.Item.selected}>추가</button>\r\n    );\r\n};\r\n\r\nexport default LectureAddButton;","import React , { Component } from \"react\";\r\nimport LectureAddButton from \"./LectureAdd/LectureAddButton\";\r\nimport \"./Lecture.css\";\r\n\r\nclass Lecture extends Component {\r\n\r\n    render() {\r\n        // 부모로 부터 받아온 prop\r\n        const {\r\n            lectureIdx,\r\n            lectureName,\r\n            lectureSemester,\r\n            lectureDate,\r\n            professorName,\r\n            lectureCode,\r\n            selected,\r\n            lectureAdd,\r\n            currentLectures\r\n        } = this.props;\r\n\r\n        // lecture를 하나의 Item 으로 만든다.\r\n        const lectureItem = {\r\n        Item: {\r\n            lectureIdx: lectureIdx,\r\n            lectureName: lectureName,\r\n            lectureSemester: lectureSemester,\r\n            lectureDate: lectureDate,\r\n            professorName: professorName,\r\n            lectureCode: lectureCode,\r\n            selected: selected\r\n        }};\r\n\r\n    return (\r\n        <tr className=\"lecture\">\r\n            <td>{lectureItem.Item.lectureIdx}</td>\r\n            <td>{lectureItem.Item.lectureCode}</td>\r\n            <td>{lectureItem.Item.lectureName}</td>\r\n            <td>{lectureItem.Item.lectureSemester}</td>\r\n            <td>{lectureItem.Item.lectureDate}</td>\r\n            <td>{lectureItem.Item.professorName}</td>\r\n            <td>\r\n            <LectureAddButton\r\n                currentLectures={currentLectures} // 전체 데이터\r\n                lectureItem={lectureItem}         // 현재 데이터\r\n                lectureAdd={lectureAdd}           // func(강의 Add)\r\n            />\r\n            </td>\r\n        </tr>\r\n    );\r\n    }\r\n}\r\n\r\n// function Lecture({\r\n//      lectureIdx,\r\n//      lectureName,\r\n//      lectureSemester,\r\n//      lectureDate,\r\n//      professorName,\r\n//      lectureCode,\r\n//      lectureAdd,\r\n//      currentLectures\r\n//     }) {\r\n    \r\n//     const lectureItem = {\r\n//     Item: {\r\n//         lectureIdx: lectureIdx,\r\n//         lectureName: lectureName,\r\n//         lectureSemester: lectureSemester,\r\n//         lectureDate: lectureDate,\r\n//         professorName: professorName,\r\n//         lectureCode: lectureCode,\r\n//         selected: false\r\n//     }};\r\n\r\n//     return (\r\n//         <tr className=\"lecture\">\r\n//             <td>{lectureItem.Item.lectureIdx}</td>\r\n//             <td>{lectureItem.Item.lectureCode}</td>\r\n//             <td>{lectureItem.Item.lectureName}</td>\r\n//             <td>{lectureItem.Item.lectureSemester}</td>\r\n//             <td>{lectureItem.Item.lectureDate}</td>\r\n//             <td>{lectureItem.Item.professorName}</td>\r\n//             <td>\r\n//             <LectureAddButton\r\n//                 key={lectureItem.Item.lectureIdx}\r\n//                 lectureItem={lectureItem}\r\n//                 lectureAdd={lectureAdd}\r\n//                 currentLectures={currentLectures}\r\n//             />\r\n//             </td>\r\n//         </tr>\r\n//     );\r\n// }\r\n\r\n// // http://13.125.253.127:8080/kpu-schedule/lectureLoading/G\r\n// Lecture.propTypes = {\r\n//     lectureIdx: PropTypes.string.isRequired,\r\n//     // lectureGubun: PropTypes.string.isRequired,\r\n//     lectureName: PropTypes.string.isRequired,\r\n//     // code: PropTypes.string.isRequired,\r\n//     lectureYear: PropTypes.string.isRequired,\r\n//     lectureSemester: PropTypes.string.isRequired,\r\n//     // lectureDate: PropTypes.string.isRequired,\r\n//     professorName: PropTypes.string.isRequired,\r\n//     lectureCode: PropTypes.string.isRequired\r\n// };\r\n\r\nexport default Lecture;","import React from \"react\";\r\nimport \"../Lecture.css\";\r\n\r\nconst LectureAddTemplate = ({ children }) => {\r\n\r\n   return (\r\n    <table>\r\n        <thead>\r\n        <tr>\r\n            <th width=\"70\">No</th>\r\n            <th>강의코드</th>\r\n            <th>강의명</th>\r\n            <th width=\"70\">학기</th>\r\n            <th>강의시간</th>\r\n            <th width=\"120\">교수이름</th>\r\n            <th width=\"120\"></th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n            {children}\r\n        </tbody>\r\n    </table>\r\n   );\r\n}\r\n\r\nexport default LectureAddTemplate;","import React from \"react\";\r\n\r\nconst LectureRemoveButton = ({currentLectures, lectureIdx, lectureRemove}) => {\r\n    \r\n    return (\r\n        <button onClick={(event) => {\r\n            const index = currentLectures.findIndex(lecture => \r\n                lecture.lectureIdx === lectureIdx);\r\n            currentLectures[index].selected = false;\r\n\r\n            lectureRemove(lectureIdx);\r\n        }}\r\n        >&times;</button>\r\n    );\r\n};\r\n\r\nexport default LectureRemoveButton;","import React , { Component } from \"react\";\r\nimport LectureRemoveButton from \"./LectureRemoveButton\";\r\nimport \"../Lecture.css\";\r\n\r\nclass LectureItem extends Component {\r\n    render() {\r\n        const {\r\n            lectureIdx,\r\n            lectureName,\r\n            lectureSemester,\r\n            lectureDate,\r\n            professorName,\r\n            lectureCode,\r\n            lectureRemove,\r\n            currentLectures\r\n        } = this.props;\r\n\r\n        return (\r\n            <tr className=\"lecture\">\r\n                <td>{lectureIdx}</td>\r\n                <td>{lectureCode}</td>\r\n                <td>{lectureName}</td>\r\n                <td>{lectureSemester}</td>\r\n                <td>{lectureDate}</td>\r\n                <td>{professorName}</td>\r\n                <td>\r\n                <LectureRemoveButton \r\n                    lectureIdx={lectureIdx}\r\n                    lectureRemove={lectureRemove}\r\n                    currentLectures={currentLectures}\r\n                />\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\nexport default LectureItem;","import React , { Component } from \"react\";\r\nimport LectureItem from \"./LectureItem\";\r\n\r\nclass LectureList extends Component {\r\n\r\n    render() {\r\n        const { lectureItems, isItemAdd, lectureRemove, currentLectures } = this.props;\r\n\r\n        return (\r\n            lectureItems.map(lecture => (\r\n            <LectureItem\r\n                key={lecture.Item.lectureIdx}\r\n                lectureIdx={lecture.Item.lectureIdx}\r\n                lectureName={lecture.Item.lectureName}\r\n                lectureSemester={lecture.Item.lectureSemester}\r\n                lectureDate={lecture.Item.lectureDate}\r\n                professorName={lecture.Item.professorName}\r\n                lectureCode={lecture.Item.lectureCode}\r\n                lectureRemove={lectureRemove}\r\n                isItemAdd={isItemAdd}\r\n                currentLectures={currentLectures}\r\n            />\r\n            ))\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default LectureList;","import React from \"react\";\r\n\r\n\r\nconst Major = ({ lectures, changeMajor }) => {\r\n    const majors = [\r\n        {\r\n            majorName: \"전공을 선택하세요\",\r\n            majorCode: \"\",\r\n        },\r\n        {\r\n            majorName: \"전체\",\r\n            majorCode: \"\",\r\n        },\r\n        {\r\n            majorName: \"컴퓨터공학부\",\r\n            majorCode: \"ACS\",\r\n        },{\r\n            majorName: \"기계공학과\",\r\n            majorCode: \"AME\",\r\n        },{\r\n            majorName: \"기계설계공학과\",\r\n            majorCode: \"AMD\",\r\n        },{\r\n            majorName: \"메카트로닉스공학과\",\r\n            majorCode: \"AAE\",\r\n        },{\r\n            majorName: \"전자공학부\",\r\n            majorCode: \"AEE\",\r\n        },{\r\n            majorName: \"게임공학부\",\r\n            majorCode: \"AMM\",\r\n        },{\r\n            majorName: \"신소재공학과\",\r\n            majorCode: \"AMT\",\r\n        },{\r\n            majorName: \"생명화학공학과\",\r\n            majorCode: \"ACH\",\r\n        },{\r\n            majorName: \"디자인학부\",\r\n            majorCode: \"AID\",\r\n        },{\r\n            majorName: \"경영학부\",\r\n            majorCode: \"AEB\",\r\n        },{\r\n            majorName: \"나노광공학과\",\r\n            majorCode: \"ANO\",\r\n        },{\r\n            majorName: \"에너지전기공학과\",\r\n            majorCode: \"AEN\",\r\n        },{\r\n            majorName: \"교양기초교육원\",\r\n            majorCode: \"AAK\", /// AAJ(현장)\r\n        }\r\n    ];\r\n\r\n    // const majorLectures = [];\r\n    // lectures.map(lecture => {\r\n    //     if(lecture.lectureCode.includes(\"AAK\")) {\r\n    //         majorLectures.push(lecture);\r\n    //     }\r\n    // });\r\n    // console.log(majorLectures);\r\n\r\n    return (\r\n        <select onChange={(event) => {\r\n                changeMajor(event.target.value);\r\n            }}>\r\n            {majors.map(major => (\r\n                <option key={major.majorName} value={major.majorCode}>\r\n                    {major.majorName}\r\n                </option>\r\n            ))}\r\n        </select>\r\n    );\r\n};\r\n\r\n// Major.propTypes = {\r\n//     temp: PropTypes.number.isRequired,\r\n//     condition: PropTypes.oneOf([\r\n//         \"컴퓨터공학부\",\r\n//         \"기계공학과\", \r\n//         \"기계설계공학과\",\r\n//         \"메카트로닉스공학과\",\r\n//         \"전자공학부\",\r\n//         \"게임공학부\",\r\n//         \"신소재공학과\",\r\n//         \"생명화학공학과\",\r\n//         \"디자인학부\",\r\n//         \"경영학부\",\r\n//         \"나노광공학과\",\r\n//         \"에너지전기공학과\",\r\n//         \"교양기초교육원\"\r\n//     ]).isRequired\r\n// };\r\n\r\n// const styles = StyleSheet.create({\r\n//     container: {\r\n//         flex: 1\r\n//       },\r\n//       temp: {\r\n//         fontSize: 42,\r\n//         color: \"white\"\r\n//       },\r\n//       halfContainer: {\r\n//         flex: 1,\r\n//         justifyContent: \"center\",\r\n//         alignItems: \"center\"\r\n//       },\r\n//       title: {\r\n//         color: \"white\",\r\n//         fontSize: 44,\r\n//         fontWeight: \"300\",\r\n//         marginBottom: 10,\r\n//         textAlign: \"left\"\r\n//       },\r\n//       subtitle: {\r\n//         fontWeight: \"600\",\r\n//         color: \"white\",\r\n//         fontSize: 24,\r\n//         textAlign: \"left\"\r\n//       },\r\n//       textContainer: {\r\n//         alignItems: \"flex-start\",\r\n//         paddingHorizontal: 40,\r\n//         justifyContent: \"center\",\r\n//         flex: 1\r\n//       }\r\n// });\r\n\r\nexport default Major","import React from 'react';\r\n\r\nconst Pagination = ({ currentPage, postsPerPage, totalPosts, paginate }) => {\r\n    \r\n    const totalPage = [];\r\n    \r\n    for(let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\r\n        totalPage.push(i);\r\n    }\r\n\r\n    return (\r\n    <div className=\"pagination_box\">\r\n        <ul className=\"pagination\">\r\n            <li className=\"page-item\">\r\n                <button onClick={() => {\r\n                    if(currentPage === 1) return;\r\n                    currentPage = currentPage - 1;\r\n                    paginate(currentPage);\r\n                }} className=\"page-btn\">\r\n                    이전페이지\r\n                </button>\r\n            </li>\r\n            <li className=\"page-item\">\r\n                {currentPage}/{totalPage.length}\r\n            </li>\r\n            <li className=\"page-item\">\r\n                <button onClick={() => {\r\n                    if(currentPage === totalPage.length) return;\r\n                    currentPage = currentPage + 1;\r\n                    paginate(currentPage);\r\n                }} className=\"page-btn\">\r\n                    다음페이지\r\n                </button>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n    );\r\n\r\n    // return (\r\n    //  <div className=\"pagination_box\">\r\n    //   <ul className=\"pagination\">\r\n    //       {pageNumbers.map(number => (\r\n    //         <li key={number} className=\"page-item\">\r\n    //             <a onClick={() => paginate(number)} href=\"#\" className=\"page-link\">\r\n    //                 {number}\r\n    //             </a>\r\n    //         </li>\r\n    //       ))}\r\n    //   </ul>\r\n    // </div>\r\n    // );\r\n};\r\n\r\nexport default Pagination","import React from 'react';\nimport axios from \"axios\";\nimport Lecture from \"./Lecture\";\nimport LectureAddTemplate from \"./LectureAdd/LectureAddTemplate\";\nimport LectureList from \"./LectureAdd/LectureList\";\nimport Major from \"./Major\";\nimport Pagination from \"./Pagination\";\nimport './App.css';\nimport './Controller.css';\n\nclass App extends React.Component {\n\n  state = {\n    url: \"https://raw.githubusercontent.com/doorisopen/kpu-schedule-app/master/data/\",\n    gubun: \"A.json\",    // sch A, G\n    currentMajor: \"ALL\",\n    currentPage: 1,\n    postsPerPage: 15,   // post per 15\n    btn1Disabled: true,// button 1 enabled\n    btn2Disabled: false, // button 2 disabled\n    btn1Color: true,\n    btn2Color: false, \n    isLoading: true, // 데이터 로딩\n    majorLectureLoading: false, // 전공 데이터 로딩\n    lectures: [],       // 전공 별 데이터 (변동)\n    lecturesSave: [],   // 초기 전체 데이터 (고정)\n    lectureItems: []    // 강의 추가 데이터 (변동)\n  };\n\n  // async: 이 함수가 비동기라는것을 말해주는것이고 await은 axios로 fetch 해온 data를 모두 로드 할때 까지 기다리라는 말임\n  getLectures = async() => {\n    const { url, gubun } = this.state;\n    const settingData = [];\n    const {\n      data : { \n        lectures \n      }\n    /* AWS Server */ \n    // http://13.125.253.127:8080/kpu-schedule/\n    //\"https://raw.githubusercontent.com/doorisopen/kpu-schedule-app/master/data/A.json\"\n    } = await axios.get( url + gubun );\n\n    // 배열 요소(selected: false) 추가 한다.\n    lectures.forEach(lecture => {\n      settingData.push({...lecture, selected: false});\n    });\n\n    // state-> lectures:lectures <- axios에서 가져온 lectures임\n    this.setState({ lectures: settingData, lecturesSave: settingData, isLoading: false });\n  };\n\n  getMajorLectures = async() => {\n    const majorLectures = [];\n    const { currentMajor, lectures } = this.state;\n    \n    lectures.forEach(lecture => {\n      if(lecture.lectureCode.includes(currentMajor)) {\n          majorLectures.push(lecture);\n      }\n    });\n    \n    this.setState({ lectures: majorLectures, isLoading: false, majorLectureLoading: false});\n\n  };\n\n  // componentDidMount: component가 생성되고 호출되는 life Cycle\n  componentDidMount() {\n    this.getLectures();\n  }\n  \n  // componentDidUpdate: setState가 되면 호출되는 life Cycle 제어문이 없으면 무한 루프돌 위험이있음\n  componentDidUpdate() {\n    if(this.state.isLoading && !this.state.majorLectureLoading) {\n      this.getLectures();\n    }\n    if(this.state.isLoading && this.state.majorLectureLoading) {\n      this.getMajorLectures();\n    }\n  }\n\n  // Controller 대학, 대학원 disable, enable event\n  onChangeButton1(event) {\n    if (event.target.onclick) {\n      this.setState({ btn2Disabled: false, btn2Color: false});\n      this.setState({ btn1Disabled: true, btn1Color: true}); \n    }\n  }\n  onChangeButton2(event) {\n    if (event.target.onclick) {\n      this.setState({ btn1Disabled: false, btn1Color: false});\n      this.setState({ btn2Disabled: true, btn2Color: true});\n    }\n  }\n  \n\n  render() {\n    // Get state\n    const { \n      currentPage, \n      postsPerPage, \n      isLoading, \n      lectures, \n      lecturesSave, \n      currentMajor, \n      lectureItems\n    } = this.state;\n\n    // Get current lectures\n    const indexOfLastLecture = currentPage * postsPerPage;\n    const indexOfFirstLecture = indexOfLastLecture - postsPerPage;\n    const currentLectures = lectures.slice(indexOfFirstLecture, indexOfLastLecture);\n\n    // Change Page\n    const paginate = (pageNumber) => this.setState({ currentPage: pageNumber });\n    // Chage btn Color\n    const btn1Selected = this.state.btn1Color ? \"red\" : \"black\";\n    const btn2Selected = this.state.btn2Color ? \"red\" : \"black\";\n    \n    // Change Major\n    const changeMajor = (majorCode) => {\n      this.setState({ lectures: lecturesSave, currentMajor: majorCode, currentPage: 1, isLoading: true, majorLectureLoading: true});\n      console.log(\"change Major -->\"+currentMajor);\n    }\n    \n    // Lecture Add\n    const lectureAdd = (lectureAddItems) => {\n      this.setState({\n        // lectures: unSelectedLectures,\n        lectureItems: lectureItems.concat(lectureAddItems)\n      });\n    }\n\n    // lecture Remove\n    const lectureRemove = (lectureIdx) => {\n      const { lectureItems } = this.state;\n      this.setState({ \n        lectureItems: lectureItems.filter(lectureItem => lectureItem.Item.lectureIdx !== lectureIdx)\n      });\n    }\n    \n\n    return (\n      <div className=\"lecture-page\">\n        <header className=\"lecture-page-header\">\n          한국산업기술대학교 강의 시간표 만들기\n        </header>\n          <section className=\"lecture-container\">\n            {isLoading ? (\n              <div className=\"loader\">\n                Loading...\n              </div>\n              ) : (\n                <div className=\"lecture-contents\">\n                  {/* {s} Controller */}\n                  <div className=\"lecture-controller\">\n                    <div className=\"controller-item\">\n                      <Major \n                        lectures={lectures}\n                        changeMajor={changeMajor}\n                      />\n                    </div>\n                    <div className=\"controller-item\">\n                      <button className=\"controller-button\" onClick={(event) => {\n                          this.setState({ lectures: [], currentPage: 1, gubun: \"A.json\", isLoading: true});\n                          this.onChangeButton1(event);\n                        }}\n                        style={{color: btn1Selected}}\n                        disabled={this.state.btn1Disabled}\n                      >\n                          학부(대학교)\n                      </button>\n                      <button className=\"controller-button\" onClick={(event) => {\n                          this.setState({ lectures: [], currentPage: 1, gubun: \"G.json\", isLoading: true});\n                          this.onChangeButton2(event);\n                        }}\n                        style={{color: btn2Selected}}\n                        disabled={this.state.btn2Disabled}\n                      >\n                        석사(대학원)\n                      </button>\n                    </div>\n                  </div>\n                  {/* {e} Controller */}\n                  <table>\n                    <thead>\n                      <tr>\n                          <th width=\"70\">No</th>\n                          <th>강의코드</th>\n                          <th>강의명</th>\n                          <th width=\"70\">학기</th>\n                          <th>강의시간</th>\n                          <th width=\"120\">교수이름</th>\n                          <th width=\"120\"></th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {currentLectures.map(lecture => (\n                        <Lecture\n                          key={lecture.lectureIdx}\n                          lectureIdx={lecture.lectureIdx}\n                          lectureGubun={lecture.lectureGubun} \n                          lectureName={lecture.lectureName} \n                          code={lecture.code} \n                          lectureYear={lecture.lectureYear} \n                          lectureSemester={lecture.lectureSemester}\n                          lectureDate={lecture.lectureDate}\n                          professorName={lecture.professorName}\n                          lectureCode={lecture.lectureCode}\n                          selected={lecture.selected}\n                          lectureAdd={lectureAdd}\n                          currentLectures={currentLectures}\n                        />\n                      ))}\n                    </tbody>\n                  </table>\n                  <Pagination \n                    currentPage={currentPage}\n                    postsPerPage={postsPerPage} \n                    totalPosts={lectures.length} \n                    paginate={paginate} />\n                </div>\n            )}\n              <div className=\"lecture-contents\">\n                <LectureAddTemplate>\n                  <LectureList\n                    key = {lectureItems}\n                    lectureItems = {lectureItems}\n                    lectureRemove = {lectureRemove}\n                    currentLectures={currentLectures}\n                  />\n                </LectureAddTemplate>\n              </div>\n          </section>\n        <footer className=\"lecture-page-footer\">\n          github. https://github.com/doorisopen\n        </footer>\n      </div>\n    );\n  }\n\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}
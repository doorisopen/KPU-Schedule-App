{"version":3,"sources":["Lecture.js","Major.js","Pagination.js","App.js","index.js"],"names":["Lecture","lectureIdx","lectureName","lectureSemester","lectureDate","professorName","lectureCode","className","Major","lectures","changeMajor","onChange","event","target","value","majorName","majorCode","map","major","key","Pagination","currentPage","postsPerPage","totalPosts","paginate","totalPage","i","Math","ceil","push","onClick","length","App","state","url","gubun","currentMajor","btn1Disabled","btn2Disabled","btn1Color","btn2Color","isLoading","majorLectureLoading","lecturesSave","getLectures","a","async","axios","get","data","setState","getMajorLectures","majorLectures","lecture","includes","this","onclick","indexOfLastLecture","indexOfFirstLecture","currentLectures","slice","btn1Selected","btn2Selected","console","log","onChangeButton1","style","color","disabled","onChangeButton2","width","lectureGubun","code","lectureYear","pageNumber","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sXAsCeA,MAjCf,YAMQ,IANUC,EAMX,EANWA,WACbC,EAKE,EALFA,YACAC,EAIE,EAJFA,gBACAC,EAGE,EAHFA,YACAC,EAEE,EAFFA,cACAC,EACE,EADFA,YAED,OACI,wBAAIC,UAAU,WACV,4BAAKN,GACL,4BAAKK,GACL,4BAAKJ,GACL,4BAAKC,GACL,4BAAKC,GACL,4BAAKC,GACL,2DC6GGG,EA9HD,SAAC,GAA8B,EAA5BC,SAA6B,IAAnBC,EAAkB,EAAlBA,YA4DvB,OACI,4BAAQC,SAAU,SAACC,GACXF,EAAYE,EAAMC,OAAOC,SA7DtB,CACX,CACIC,UAAW,oDACXC,UAAW,IAEf,CACID,UAAW,eACXC,UAAW,IAEf,CACID,UAAW,uCACXC,UAAW,OACb,CACED,UAAW,iCACXC,UAAW,OACb,CACED,UAAW,6CACXC,UAAW,OACb,CACED,UAAW,yDACXC,UAAW,OACb,CACED,UAAW,iCACXC,UAAW,OACb,CACED,UAAW,iCACXC,UAAW,OACb,CACED,UAAW,uCACXC,UAAW,OACb,CACED,UAAW,6CACXC,UAAW,OACb,CACED,UAAW,iCACXC,UAAW,OACb,CACED,UAAW,2BACXC,UAAW,OACb,CACED,UAAW,uCACXC,UAAW,OACb,CACED,UAAW,mDACXC,UAAW,OACb,CACED,UAAW,6CACXC,UAAW,QAgBHC,KAAI,SAAAC,GAAK,OACb,4BAAQC,IAAKD,EAAMF,UAAWF,MAAOI,EAAMF,WACtCE,EAAMH,gBCbZK,EAnDI,SAAC,GAIhB,IAJyE,IAAvDC,EAAsD,EAAtDA,YAAaC,EAAyC,EAAzCA,aAAcC,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,SAEnDC,EAAY,GAEVC,EAAI,EAAGA,GAAKC,KAAKC,KAAKL,EAAaD,GAAeI,IACtDD,EAAUI,KAAKH,GAGnB,OACA,yBAAKnB,UAAU,kBACX,wBAAIA,UAAU,cACV,wBAAIA,UAAU,aACV,4BAAQuB,QAAS,WACM,IAAhBT,GAEHG,EADAH,GAA4B,IAE7Bd,UAAU,YAJb,mCAQJ,wBAAIA,UAAU,aACTc,EADL,IACmBI,EAAUM,QAE7B,wBAAIxB,UAAU,aACV,4BAAQuB,QAAS,WACVT,IAAgBI,EAAUM,QAE7BP,EADAH,GAA4B,IAE7Bd,UAAU,YAJb,sCCsKDyB,G,uNAzLbC,MAAQ,CACNC,IAAK,6EACLC,MAAO,SACPC,aAAc,MACdf,YAAa,EACbC,aAAc,GACde,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,WAAW,EACXC,WAAW,EACXC,qBAAqB,EACrBjC,SAAU,GACVkC,aAAc,I,EAIhBC,YAAc,kCAAAC,EAAAC,OAAA,yDACW,EAAKb,MAApBC,EADI,EACJA,IAAKC,EADD,EACCA,MADD,WAAAU,EAAA,MASFE,IAAMC,IAAKd,EAAMC,IATf,gBAIR1B,EAJQ,EAGVwC,KACExC,SAQJ,EAAKyC,SAAS,CAAEzC,WAAUkC,aAAclC,EAAUgC,WAAW,IAZjD,sC,EAedU,iBAAmB,8BAAAN,EAAAC,OAAA,gDACXM,EAAgB,GADL,EAEkB,EAAKnB,MAAhCG,EAFS,EAETA,aAFS,EAEK3B,SAEbQ,KAAI,SAAAoC,GACRA,EAAQ/C,YAAYgD,SAASlB,IAC5BgB,EAAcvB,KAAKwB,MAQzB,EAAKH,SAAS,CAAEzC,SAAU2C,EAAeX,WAAW,EAAOC,qBAAqB,IAd/D,sC,mFAoBjBa,KAAKX,gB,2CAKFW,KAAKtB,MAAMQ,YAAcc,KAAKtB,MAAMS,qBACrCa,KAAKX,cAEJW,KAAKtB,MAAMQ,WAAac,KAAKtB,MAAMS,qBACpCa,KAAKJ,qB,sCAKOvC,GACVA,EAAMC,OAAO2C,UACfD,KAAKL,SAAS,CAAEZ,cAAc,EAAOE,WAAW,IAChDe,KAAKL,SAAS,CAAEb,cAAc,EAAME,WAAW,O,sCAGnC3B,GACVA,EAAMC,OAAO2C,UACfD,KAAKL,SAAS,CAAEb,cAAc,EAAOE,WAAW,IAChDgB,KAAKL,SAAS,CAAEZ,cAAc,EAAME,WAAW,O,+BAKzC,IAAD,SAEgFe,KAAKtB,MAApFZ,EAFD,EAECA,YAAaC,EAFd,EAEcA,aAAcmB,EAF5B,EAE4BA,UAAWhC,EAFvC,EAEuCA,SAAUkC,EAFjD,EAEiDA,aAAcP,EAF/D,EAE+DA,aAEhEqB,EAAqBpC,EAAcC,EACnCoC,EAAsBD,EAAqBnC,EAC3CqC,EAAkBlD,EAASmD,MAAMF,EAAqBD,GAItDI,EAAeN,KAAKtB,MAAMM,UAAY,MAAQ,QAC9CuB,EAAeP,KAAKtB,MAAMO,UAAY,MAAQ,QAOpD,OACE,yBAAKjC,UAAU,gBACb,4BAAQA,UAAU,uBAAlB,6GAGE,6BAASA,UAAU,qBAChBkC,EACC,yBAAKlC,UAAU,UAAf,cAIE,yBAAKA,UAAU,oBAEb,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,mBACb,kBAAC,EAAD,CACEE,SAAUA,EACVC,YAtBA,SAACM,GACnB,EAAKkC,SAAS,CAAEzC,SAAUkC,EAAcP,aAAcpB,EAAWK,YAAa,EAAGoB,WAAW,EAAMC,qBAAqB,IACvHqB,QAAQC,IAAI,sBAAmB5B,OAuBjB,yBAAK7B,UAAU,mBACb,4BAAQA,UAAU,oBAAoBuB,QAAS,SAAAlB,GAC3C,EAAKsC,SAAS,CAAEzC,SAAU,GAAIY,YAAa,EAAGc,MAAO,SAAUM,WAAW,IAC1E,EAAKwB,gBAAgBrD,IAEvBsD,MAAO,CAACC,MAAON,GACfO,SAAUb,KAAKtB,MAAMI,cALvB,oCASA,4BAAQ9B,UAAU,oBAAoBuB,QAAS,SAAAlB,GAC3C,EAAKsC,SAAS,CAAEzC,SAAU,GAAIY,YAAa,EAAGc,MAAO,SAAUM,WAAW,IAC1E,EAAK4B,gBAAgBzD,IAEvBsD,MAAO,CAACC,MAAOL,GACfM,SAAUb,KAAKtB,MAAMK,cALvB,sCAYJ,+BACE,+BACE,4BACI,wBAAIgC,MAAM,MAAV,MACA,wDACA,kDACA,wBAAIA,MAAM,MAAV,gBACA,wDACA,wBAAIA,MAAM,OAAV,4BACA,wBAAIA,MAAM,UAGhB,+BACGX,EAAgB1C,KAAI,SAAAoC,GAAO,OAC1B,kBAAC,EAAD,CACElC,IAAKkC,EAAQpD,WACbA,WAAYoD,EAAQpD,WACpBsE,aAAclB,EAAQkB,aACtBrE,YAAamD,EAAQnD,YACrBsE,KAAMnB,EAAQmB,KACdC,YAAapB,EAAQoB,YACrBtE,gBAAiBkD,EAAQlD,gBACzBC,YAAaiD,EAAQjD,YACrBC,cAAegD,EAAQhD,cACvBC,YAAa+C,EAAQ/C,mBAK7B,kBAAC,EAAD,CACEe,YAAaA,EACbC,aAAcA,EACdC,WAAYd,EAASsB,OACrBP,SArFC,SAACkD,GAAD,OAAgB,EAAKxB,SAAS,CAAE7B,YAAaqD,SAyF1D,4BAAQnE,UAAU,uBAAlB,8C,GAnLUoE,IAAMC,YCFxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.8d752813.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Lecture.css\";\r\n\r\n\r\nfunction Lecture({lectureIdx,\r\n     lectureName,\r\n     lectureSemester,\r\n     lectureDate,\r\n     professorName,\r\n     lectureCode\r\n    }) {\r\n    return (\r\n        <tr className=\"lecture\">\r\n            <td>{lectureIdx}</td>\r\n            <td>{lectureCode}</td>\r\n            <td>{lectureName}</td>\r\n            <td>{lectureSemester}</td>\r\n            <td>{lectureDate}</td>\r\n            <td>{professorName}</td>\r\n            <td>과목 선택</td>\r\n        </tr>\r\n    );\r\n}\r\n\r\n// http://13.125.253.127:8080/kpu-schedule/lectureLoading/G\r\nLecture.propTypes = {\r\n    lectureIdx: PropTypes.string.isRequired,\r\n    // lectureGubun: PropTypes.string.isRequired,\r\n    lectureName: PropTypes.string.isRequired,\r\n    // code: PropTypes.string.isRequired,\r\n    lectureYear: PropTypes.string.isRequired,\r\n    lectureSemester: PropTypes.string.isRequired,\r\n    // lectureDate: PropTypes.string.isRequired,\r\n    professorName: PropTypes.string.isRequired,\r\n    lectureCode: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Lecture;","import React from \"react\";\r\n\r\n\r\nconst Major = ({ lectures, changeMajor }) => {\r\n    const majors = [\r\n        {\r\n            majorName: \"전공을 선택하세요\",\r\n            majorCode: \"\",\r\n        },\r\n        {\r\n            majorName: \"전체\",\r\n            majorCode: \"\",\r\n        },\r\n        {\r\n            majorName: \"컴퓨터공학부\",\r\n            majorCode: \"ACS\",\r\n        },{\r\n            majorName: \"기계공학과\",\r\n            majorCode: \"AME\",\r\n        },{\r\n            majorName: \"기계설계공학과\",\r\n            majorCode: \"AMD\",\r\n        },{\r\n            majorName: \"메카트로닉스공학과\",\r\n            majorCode: \"AAE\",\r\n        },{\r\n            majorName: \"전자공학부\",\r\n            majorCode: \"AEE\",\r\n        },{\r\n            majorName: \"게임공학부\",\r\n            majorCode: \"AMM\",\r\n        },{\r\n            majorName: \"신소재공학과\",\r\n            majorCode: \"AMT\",\r\n        },{\r\n            majorName: \"생명화학공학과\",\r\n            majorCode: \"ACH\",\r\n        },{\r\n            majorName: \"디자인학부\",\r\n            majorCode: \"AID\",\r\n        },{\r\n            majorName: \"경영학부\",\r\n            majorCode: \"AEB\",\r\n        },{\r\n            majorName: \"나노광공학과\",\r\n            majorCode: \"ANO\",\r\n        },{\r\n            majorName: \"에너지전기공학과\",\r\n            majorCode: \"AEN\",\r\n        },{\r\n            majorName: \"교양기초교육원\",\r\n            majorCode: \"AAK\", /// AAJ(현장)\r\n        }\r\n    ];\r\n\r\n    // const majorLectures = [];\r\n    // lectures.map(lecture => {\r\n    //     if(lecture.lectureCode.includes(\"AAK\")) {\r\n    //         majorLectures.push(lecture);\r\n    //     }\r\n    // });\r\n    // console.log(majorLectures);\r\n\r\n    return (\r\n        <select onChange={(event) => {\r\n                changeMajor(event.target.value);\r\n            }}>\r\n            {majors.map(major => (\r\n                <option key={major.majorCode} value={major.majorCode}>\r\n                    {major.majorName}\r\n                </option>\r\n            ))}\r\n        </select>\r\n    );\r\n};\r\n\r\n// Major.propTypes = {\r\n//     temp: PropTypes.number.isRequired,\r\n//     condition: PropTypes.oneOf([\r\n//         \"컴퓨터공학부\",\r\n//         \"기계공학과\", \r\n//         \"기계설계공학과\",\r\n//         \"메카트로닉스공학과\",\r\n//         \"전자공학부\",\r\n//         \"게임공학부\",\r\n//         \"신소재공학과\",\r\n//         \"생명화학공학과\",\r\n//         \"디자인학부\",\r\n//         \"경영학부\",\r\n//         \"나노광공학과\",\r\n//         \"에너지전기공학과\",\r\n//         \"교양기초교육원\"\r\n//     ]).isRequired\r\n// };\r\n\r\n// const styles = StyleSheet.create({\r\n//     container: {\r\n//         flex: 1\r\n//       },\r\n//       temp: {\r\n//         fontSize: 42,\r\n//         color: \"white\"\r\n//       },\r\n//       halfContainer: {\r\n//         flex: 1,\r\n//         justifyContent: \"center\",\r\n//         alignItems: \"center\"\r\n//       },\r\n//       title: {\r\n//         color: \"white\",\r\n//         fontSize: 44,\r\n//         fontWeight: \"300\",\r\n//         marginBottom: 10,\r\n//         textAlign: \"left\"\r\n//       },\r\n//       subtitle: {\r\n//         fontWeight: \"600\",\r\n//         color: \"white\",\r\n//         fontSize: 24,\r\n//         textAlign: \"left\"\r\n//       },\r\n//       textContainer: {\r\n//         alignItems: \"flex-start\",\r\n//         paddingHorizontal: 40,\r\n//         justifyContent: \"center\",\r\n//         flex: 1\r\n//       }\r\n// });\r\n\r\nexport default Major","import React from 'react';\r\n\r\n\r\n\r\n\r\nconst Pagination = ({ currentPage, postsPerPage, totalPosts, paginate }) => {\r\n    \r\n    const totalPage = [];\r\n    \r\n    for(let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\r\n        totalPage.push(i);\r\n    }\r\n\r\n    return (\r\n    <div className=\"pagination_box\">\r\n        <ul className=\"pagination\">\r\n            <li className=\"page-item\">\r\n                <button onClick={() => {\r\n                    if(currentPage === 1) return;\r\n                    currentPage = currentPage - 1;\r\n                    paginate(currentPage);\r\n                }} className=\"page-btn\">\r\n                    이전페이지\r\n                </button>\r\n            </li>\r\n            <li className=\"page-item\">\r\n                {currentPage}/{totalPage.length}\r\n            </li>\r\n            <li className=\"page-item\">\r\n                <button onClick={() => {\r\n                    if(currentPage === totalPage.length) return;\r\n                    currentPage = currentPage + 1;\r\n                    paginate(currentPage);\r\n                }} className=\"page-btn\">\r\n                    다음페이지\r\n                </button>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n    );\r\n\r\n    // return (\r\n    //  <div className=\"pagination_box\">\r\n    //   <ul className=\"pagination\">\r\n    //       {pageNumbers.map(number => (\r\n    //         <li key={number} className=\"page-item\">\r\n    //             <a onClick={() => paginate(number)} href=\"#\" className=\"page-link\">\r\n    //                 {number}\r\n    //             </a>\r\n    //         </li>\r\n    //       ))}\r\n    //   </ul>\r\n    // </div>\r\n    // );\r\n};\r\n\r\nexport default Pagination","import React from 'react';\nimport axios from \"axios\";\nimport Lecture from \"./Lecture\";\nimport Major from \"./Major\";\nimport Pagination from \"./Pagination\";\nimport './App.css';\nimport './Controller.css';\n\nclass App extends React.Component {\n\n  state = {\n    url: \"https://raw.githubusercontent.com/doorisopen/kpu-schedule-app/master/data/\",\n    gubun: \"A.json\",    // sch A, G\n    currentMajor: \"ALL\",\n    currentPage: 1,\n    postsPerPage: 15,   // post per 15\n    btn1Disabled: true,// button 1 enabled\n    btn2Disabled: false, // button 2 disabled\n    btn1Color: true,\n    btn2Color: false,\n    isLoading: true,\n    majorLectureLoading: false,\n    lectures: [],\n    lecturesSave: [],\n  };\n\n  // async: 이 함수가 비동기라는것을 말해주는것이고 await은 axios로 fetch 해온 data를 모두 로드 할때 까지 기다리라는 말임\n  getLectures = async() => {\n    const { url, gubun } = this.state;\n    const {\n      data : { \n        lectures \n      }\n    /* AWS Server */ \n    // http://13.125.253.127:8080/kpu-schedule/\n    //\"https://raw.githubusercontent.com/doorisopen/kpu-schedule-app/master/data/A.json\"\n    } = await axios.get( url + gubun );\n    \n    // state-> lectures:lectures <- axios에서 가져온 lectures임\n    this.setState({ lectures, lecturesSave: lectures, isLoading: false });\n  };\n\n  getMajorLectures = async() => {\n    const majorLectures = [];\n    const { currentMajor, lectures } = this.state;\n    \n    lectures.map(lecture => {\n      if(lecture.lectureCode.includes(currentMajor)) {\n          majorLectures.push(lecture);\n      }\n    });\n    // for(let i = 0; i < lectures.length; i++) {\n    //   if(lectures.lectureCode.includes(currentMajor)) {\n    //     majorLectures.push(lectures);\n    //   }\n    // }\n    this.setState({ lectures: majorLectures, isLoading: false, majorLectureLoading: false});\n\n  };\n\n  // componentDidMount: component가 생성되고 호출되는 life Cycle\n  componentDidMount() {\n    this.getLectures();\n  }\n  \n  // componentDidUpdate: setState가 되면 호출되는 life Cycle 제어문이 없으면 무한 루프돌 위험이있음\n  componentDidUpdate() {\n    if(this.state.isLoading && !this.state.majorLectureLoading) {\n      this.getLectures();\n    }\n    if(this.state.isLoading && this.state.majorLectureLoading) {\n      this.getMajorLectures();\n    }\n  }\n\n  // Controller 대학, 대학원 disable, enable event\n  onChangeButton1(event) {\n    if (event.target.onclick) {\n      this.setState({ btn2Disabled: false, btn2Color: false});\n      this.setState({ btn1Disabled: true, btn1Color: true}); \n    }\n  }\n  onChangeButton2(event) {\n    if (event.target.onclick) {\n      this.setState({ btn1Disabled: false, btn1Color: false});\n      this.setState({ btn2Disabled: true, btn2Color: true});\n    }\n  }\n  \n\n  render() {\n    // Get state\n    const { currentPage, postsPerPage, isLoading, lectures, lecturesSave, currentMajor } = this.state;\n    // Get current lectures\n    const indexOfLastLecture = currentPage * postsPerPage;\n    const indexOfFirstLecture = indexOfLastLecture - postsPerPage;\n    const currentLectures = lectures.slice(indexOfFirstLecture, indexOfLastLecture);\n    // Change Page\n    const paginate = (pageNumber) => this.setState({ currentPage: pageNumber });\n    // Chage btn Color\n    const btn1Selected = this.state.btn1Color ? \"red\" : \"black\";\n    const btn2Selected = this.state.btn2Color ? \"red\" : \"black\";\n    // Change Major\n    const changeMajor = (majorCode) => {\n      this.setState({ lectures: lecturesSave, currentMajor: majorCode, currentPage: 1, isLoading: true, majorLectureLoading: true});\n      console.log(\"change Major -->\"+currentMajor);\n    }\n\n    return (\n      <div className=\"lecture-page\">\n        <header className=\"lecture-page-header\">\n          한국산업기술대학교 강의 시간표 만들기\n        </header>\n          <section className=\"lecture-container\">\n            {isLoading ? (\n              <div className=\"loader\">\n                Loading...\n              </div>\n              ) : (\n                <div className=\"lecture-contents\">\n                  {/* {s} Controller */}\n                  <div className=\"lecture-controller\">\n                    <div className=\"controller-item\">\n                      <Major \n                        lectures={lectures}\n                        changeMajor={changeMajor}\n                      />\n                    </div>\n                    <div className=\"controller-item\">\n                      <button className=\"controller-button\" onClick={event => {\n                          this.setState({ lectures: [], currentPage: 1, gubun: \"A.json\", isLoading: true});\n                          this.onChangeButton1(event);\n                        }}\n                        style={{color: btn1Selected}}\n                        disabled={this.state.btn1Disabled}\n                      >\n                          학부(대학교)\n                      </button>\n                      <button className=\"controller-button\" onClick={event => {\n                          this.setState({ lectures: [], currentPage: 1, gubun: \"G.json\", isLoading: true});\n                          this.onChangeButton2(event);\n                        }}\n                        style={{color: btn2Selected}}\n                        disabled={this.state.btn2Disabled}\n                      >\n                        석사(대학원)\n                      </button>\n                    </div>\n                  </div>\n                  {/* {e} Controller */}\n                  <table>\n                    <thead>\n                      <tr>\n                          <th width=\"70\">No</th>\n                          <th>강의코드</th>\n                          <th>강의명</th>\n                          <th width=\"70\">학기</th>\n                          <th>강의시간</th>\n                          <th width=\"120\">교수이름</th>\n                          <th width=\"120\"></th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {currentLectures.map(lecture => (\n                        <Lecture\n                          key={lecture.lectureIdx}\n                          lectureIdx={lecture.lectureIdx}\n                          lectureGubun={lecture.lectureGubun} \n                          lectureName={lecture.lectureName} \n                          code={lecture.code} \n                          lectureYear={lecture.lectureYear} \n                          lectureSemester={lecture.lectureSemester}\n                          lectureDate={lecture.lectureDate}\n                          professorName={lecture.professorName}\n                          lectureCode={lecture.lectureCode}\n                        />\n                      ))}\n                    </tbody>\n                  </table>\n                  <Pagination \n                    currentPage={currentPage}\n                    postsPerPage={postsPerPage} \n                    totalPosts={lectures.length} \n                    paginate={paginate} />\n                </div>\n              )}\n          </section>\n        <footer className=\"lecture-page-footer\">\n          github. https://github.com/doorisopen\n        </footer>\n      </div>\n    );\n  }\n\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}
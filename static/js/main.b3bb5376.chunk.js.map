{"version":3,"sources":["App.js","index.js"],"names":["App","state","isLoading","lectures","lectureList","getLectures","a","async","axios","get","data","console","log","setState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sUAqCeA,G,iNAhCbC,MAAQ,CACNC,WAAW,EACXC,SAAU,GACVC,YAAa,I,EAIdC,YAAc,4BAAAC,EAAAC,OAAA,kEAAAD,EAAA,MAKHE,IAAMC,IACd,2DANW,gBAGTL,EAHS,EAEXM,KACEN,YAKJO,QAAQC,IAAIR,GAEZ,EAAKS,SAAS,CAAET,cAAaF,WAAW,IAV3B,sC,mFAebY,KAAKT,gB,+BAGG,IACAH,EAAcY,KAAKb,MAAnBC,UACR,OAAO,6BAAMA,EAAY,aAAe,oB,GA5B1Ba,IAAMC,YCExBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.b3bb5376.chunk.js","sourcesContent":["import React from 'react';\nimport axios from \"axios\";\nimport './App.css';\n\nclass App extends React.Component {\n  state = {\n    isLoading: true,\n    lectures: [],\n    lectureList: []\n  }\n\n   // async: 이 함수가 비동기라는것을 말해주는것이고 await은 axios로 fetch 해온 data를 모두 로드 할때 까지 기다리라는 말임\n   getLectures = async() => {\n    const { \n      data : { \n        lectureList \n      }\n    } = await axios.get(\n      \"http://13.125.253.127:8080/kpu-schedule/lectureLoading\"\n    );\n    console.log(lectureList);\n    // state-> movies:movies <- axios에서 가져온 moives임\n    this.setState({ lectureList, isLoading: false });\n  };\n\n  // componentDidMount: component가 생성되고 호출되는 life Cycle\n  componentDidMount() {\n    this.getLectures();\n  }\n\n  render() {\n    const { isLoading } = this.state;\n    return <div>{isLoading ? \"Loading...\" : \"We are ready\"}</div>;\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}
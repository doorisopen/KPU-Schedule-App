{"version":3,"sources":["Lecture.js","Pagination.js","App.js","index.js"],"names":["Lecture","lectureIdx","lectureName","lectureSemester","lectureDate","professorName","lectureCode","className","Pagination","postsPerPage","totalPosts","paginate","pageNumbers","i","Math","ceil","push","map","number","key","onClick","href","App","state","currentPage","isLoading","lectures","getLectures","a","async","axios","get","data","console","log","length","setState","this","indexOfLastLecture","indexOfFirstLecture","currentLectures","slice","width","lecture","lectureGubun","code","lectureYear","pageNumber","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iWAsCeA,MAjCf,YAMQ,IANUC,EAMX,EANWA,WACbC,EAKE,EALFA,YACAC,EAIE,EAJFA,gBACAC,EAGE,EAHFA,YACAC,EAEE,EAFFA,cACAC,EACE,EADFA,YAED,OACI,wBAAIC,UAAU,WACV,4BAAKN,GACL,4BAAKK,GACL,4BAAKJ,GACL,4BAAKC,GACL,4BAAKC,GACL,4BAAKC,GACL,2DCKGG,EAtBI,SAAC,GAGhB,IAH4D,IAA1CC,EAAyC,EAAzCA,aAAcC,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,SACtCC,EAAc,GAEZC,EAAI,EAAGA,GAAKC,KAAKC,KAAKL,EAAaD,GAAeI,IACtDD,EAAYI,KAAKH,GAGrB,OACC,yBAAKN,UAAU,kBACd,wBAAIA,UAAU,cACTK,EAAYK,KAAI,SAAAC,GAAM,OACrB,wBAAIC,IAAKD,EAAQX,UAAU,aACvB,uBAAGa,QAAS,kBAAMT,EAASO,IAASG,KAAK,KAAKd,UAAU,aACnDW,UCsFNI,G,iNA9FbC,MAAQ,CACNC,YAAa,EACbf,aAAc,GACdgB,WAAW,EACXC,SAAU,I,EAIZC,YAAc,4BAAAC,EAAAC,OAAA,kEAAAD,EAAA,MAKFE,IAAMC,IACd,6DANU,gBAGRL,EAHQ,EAEVM,KACEN,SAKJO,QAAQC,IAAIR,GACZO,QAAQC,IAAIR,EAASS,QAErB,EAAKC,SAAS,CAAEV,WAAUD,WAAW,IAXzB,sC,mFAgBZY,KAAKV,gB,+BAGG,IAAD,SACoDU,KAAKd,MAAxDC,EADD,EACCA,YAAaf,EADd,EACcA,aAAcgB,EAD5B,EAC4BA,UAAWC,EADvC,EACuCA,SAGxCY,EAAqBd,EAAcf,EACnC8B,EAAsBD,EAAqB7B,EAC3C+B,EAAkBd,EAASe,MAAMF,EAAqBD,GAK5D,OACE,yBAAK/B,UAAU,gBACb,4BAAQA,UAAU,uBAAlB,6GAGE,6BAASA,UAAU,qBAChBkB,EACC,yBAAKlB,UAAU,UAAf,cAIE,yBAAKA,UAAU,oBACb,+BACE,+BACE,4BACI,wBAAImC,MAAM,MAAV,MACA,wDACA,kDACA,wBAAIA,MAAM,MAAV,gBACA,wDACA,wBAAIA,MAAM,OAAV,4BACA,wBAAIA,MAAM,UAGhB,+BACGF,EAAgBvB,KAAI,SAAA0B,GAAO,OAC1B,kBAAC,EAAD,CACExB,IAAKwB,EAAQ1C,WACbA,WAAY0C,EAAQ1C,WACpB2C,aAAcD,EAAQC,aACtB1C,YAAayC,EAAQzC,YACrB2C,KAAMF,EAAQE,KACdC,YAAaH,EAAQG,YACrB3C,gBAAiBwC,EAAQxC,gBACzBC,YAAauC,EAAQvC,YACrBC,cAAesC,EAAQtC,cACvBC,YAAaqC,EAAQrC,mBAK7B,kBAAC,EAAD,CACEG,aAAcA,EACdC,WAAYgB,EAASS,OACrBxB,SA9CC,SAACoC,GAAD,OAAgB,EAAKX,SAAS,CAAEZ,YAAauB,SAkD1D,4BAAQxC,UAAU,uBAAlB,8C,GAxFUyC,IAAMC,YCAxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.1b7552ca.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Lecture.css\";\r\n\r\n\r\nfunction Lecture({lectureIdx,\r\n     lectureName,\r\n     lectureSemester,\r\n     lectureDate,\r\n     professorName,\r\n     lectureCode\r\n    }) {\r\n    return (\r\n        <tr className=\"lecture\">\r\n            <td>{lectureIdx}</td>\r\n            <td>{lectureCode}</td>\r\n            <td>{lectureName}</td>\r\n            <td>{lectureSemester}</td>\r\n            <td>{lectureDate}</td>\r\n            <td>{professorName}</td>\r\n            <td>과목 선택</td>\r\n        </tr>\r\n    );\r\n}\r\n\r\n// http://13.125.253.127:8080/kpu-schedule/lectureLoading/G\r\nLecture.propTypes = {\r\n    lectureIdx: PropTypes.string.isRequired,\r\n    // lectureGubun: PropTypes.string.isRequired,\r\n    lectureName: PropTypes.string.isRequired,\r\n    // code: PropTypes.string.isRequired,\r\n    lectureYear: PropTypes.string.isRequired,\r\n    lectureSemester: PropTypes.string.isRequired,\r\n    // lectureDate: PropTypes.string.isRequired,\r\n    professorName: PropTypes.string.isRequired,\r\n    lectureCode: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Lecture;","import React from 'react';\r\n\r\n\r\nconst Pagination = ({ postsPerPage, totalPosts, paginate }) => {\r\n    const pageNumbers = [];\r\n\r\n    for(let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\r\n        pageNumbers.push(i);\r\n    }\r\n\r\n    return (\r\n     <div className=\"pagination_box\">\r\n      <ul className=\"pagination\">\r\n          {pageNumbers.map(number => (\r\n            <li key={number} className=\"page-item\">\r\n                <a onClick={() => paginate(number)} href=\"!#\" className=\"page-link\">\r\n                    {number}\r\n                </a>\r\n            </li>\r\n          ))}\r\n      </ul>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default Pagination","import React from 'react';\nimport axios from \"axios\";\nimport Lecture from \"./Lecture\";\nimport Pagination from \"./Pagination\";\nimport './App.css';\n\nclass App extends React.Component {\n\n  state = {\n    currentPage: 1,\n    postsPerPage: 15,\n    isLoading: true,\n    lectures: [],\n  };\n\n  // async: 이 함수가 비동기라는것을 말해주는것이고 await은 axios로 fetch 해온 data를 모두 로드 할때 까지 기다리라는 말임\n  getLectures = async() => {\n    const { \n      data : { \n        lectures \n      }\n    } = await axios.get(\n      \"http://13.125.253.127:8080/kpu-schedule/lectureLoading/G\"\n    );\n    console.log(lectures);\n    console.log(lectures.length);\n    // state-> lectures:lectures <- axios에서 가져온 lectures임\n    this.setState({ lectures, isLoading: false });\n  };\n\n  // componentDidMount: component가 생성되고 호출되는 life Cycle\n  componentDidMount() {\n    this.getLectures();\n  }\n\n  render() {\n    const { currentPage, postsPerPage, isLoading, lectures } = this.state;\n\n    // Get current lectures\n    const indexOfLastLecture = currentPage * postsPerPage;\n    const indexOfFirstLecture = indexOfLastLecture - postsPerPage;\n    const currentLectures = lectures.slice(indexOfFirstLecture, indexOfLastLecture);\n\n    // Change Page\n    const paginate = (pageNumber) => this.setState({ currentPage: pageNumber });\n\n    return (\n      <div className=\"lecture-page\">\n        <header className=\"lecture-page-header\">\n          한국산업기술대학교 강의 시간표 만들기\n        </header>\n          <section className=\"lecture-container\">\n            {isLoading ? (\n              <div className=\"loader\">\n                Loading...\n              </div>\n              ) : (\n                <div className=\"lecture-contents\">\n                  <table>\n                    <thead>\n                      <tr>\n                          <th width=\"70\">No</th>\n                          <th>강의코드</th>\n                          <th>강의명</th>\n                          <th width=\"70\">학기</th>\n                          <th>강의시간</th>\n                          <th width=\"120\">교수이름</th>\n                          <th width=\"120\"></th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {currentLectures.map(lecture => (\n                        <Lecture\n                          key={lecture.lectureIdx}\n                          lectureIdx={lecture.lectureIdx}\n                          lectureGubun={lecture.lectureGubun} \n                          lectureName={lecture.lectureName} \n                          code={lecture.code} \n                          lectureYear={lecture.lectureYear} \n                          lectureSemester={lecture.lectureSemester}\n                          lectureDate={lecture.lectureDate}\n                          professorName={lecture.professorName}\n                          lectureCode={lecture.lectureCode}\n                        />\n                      ))}\n                    </tbody>\n                  </table>\n                  <Pagination \n                    postsPerPage={postsPerPage} \n                    totalPosts={lectures.length} \n                    paginate={paginate} />\n                </div>\n              )}\n          </section>\n        <footer className=\"lecture-page-footer\">\n          github. https://github.com/doorisopen\n        </footer>\n      </div>\n    );\n  }\n\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}
{"version":3,"sources":["LectureAdd/LectureAddButton.js","Lecture.js","LectureAdd/LectureAddTemplate.js","LectureAdd/LectureRemoveButton.js","LectureAdd/LectureItem.js","LectureAdd/LectureList.js","TimeTable/TimeTableTemplate.js","Major.js","Pagination.js","App.js","index.js"],"names":["LectureAddButton","currentLectures","lectureItem","lectureAdd","className","onClick","event","index","findIndex","lecture","lectureIdx","Item","selected","disabled","Lecture","this","props","lectureName","lectureSemester","lectureDate","lectureLocation","professorName","lectureCode","Component","LectureAddTemplate","children","width","LectureRemoveButton","lectureRemove","LectureItem","LectureList","lectureItems","isItemAdd","map","key","TimeTableTemplate","state","data","mainResourceName","resources","fieldName","title","instances","id","text","allowMultiple","changeMainResource","bind","setState","dayNum","isMakeTable","dateLen","startTime1","endTime1","startTime2","endTime2","__day","__startHour","__endHour","__startMin","__endMin","appointment","i","length","split","trim","substring","push","startDate","Date","endDate","members","location","Paper","height","defaultCurrentDate","excludedDays","startDayHour","endDayHour","React","Major","lectures","changeMajor","onChange","target","value","majorName","majorCode","major","Pagination","currentPage","postsPerPage","totalPosts","paginate","totalPage","Math","ceil","App","url","gubun","currentMajor","btn1Disabled","btn2Disabled","btn1Color","btn2Color","isLoading","majorLectureLoading","lecturesSave","getLectures","a","async","settingData","axios","get","forEach","getMajorLectures","majorLectures","includes","onclick","indexOfLastLecture","indexOfFirstLecture","slice","btn1Selected","btn2Selected","lectureAddItems","concat","console","log","onChangeButton1","style","borderColor","onChangeButton2","lectureGubun","code","lectureYear","pageNumber","filter","onMakeTimeTableButton","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2ae84e8b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst LectureAddButton = ({currentLectures, lectureItem, lectureAdd}) => {\r\n\r\n    return (\r\n        <button className=\"button-design-small\" onClick={(event) => {\r\n            // 선택된 데이터의 Index 찾는다.\r\n            const index = currentLectures.findIndex(lecture => \r\n                lecture.lectureIdx === lectureItem.Item.lectureIdx);\r\n            currentLectures[index].selected = true;\r\n            lectureItem.Item.selected = true;\r\n            // lectureItem 추가 및 배열 갱신\r\n            lectureAdd(lectureItem);\r\n        }}\r\n        disabled={lectureItem.Item.selected}>추가</button>\r\n    );\r\n};\r\n\r\nexport default LectureAddButton;","import React , { Component } from \"react\";\r\nimport LectureAddButton from \"./LectureAdd/LectureAddButton\";\r\nimport \"./Lecture.css\";\r\n\r\nclass Lecture extends Component {\r\n\r\n    render() {\r\n        // 부모로 부터 받아온 prop\r\n        const {\r\n            lectureIdx,\r\n            lectureName,\r\n            lectureSemester,\r\n            lectureDate,\r\n            lectureLocation,\r\n            professorName,\r\n            lectureCode,\r\n            selected,\r\n            lectureAdd,\r\n            currentLectures\r\n        } = this.props;\r\n\r\n        // lecture를 하나의 Item 으로 만든다.\r\n        const lectureItem = {\r\n        Item: {\r\n            lectureIdx: lectureIdx,\r\n            lectureName: lectureName,\r\n            lectureSemester: lectureSemester,\r\n            lectureDate: lectureDate,\r\n            lectureLocation: lectureLocation,\r\n            professorName: professorName,\r\n            lectureCode: lectureCode,\r\n            selected: selected\r\n        }};\r\n\r\n    return (\r\n        <tr className=\"lecture\">\r\n            <td>{lectureIdx}</td>\r\n            <td>{lectureCode}</td>\r\n            <td>{lectureName}</td>\r\n            <td>{lectureSemester}</td>\r\n            <td>{lectureDate}</td>\r\n            <td>{lectureLocation}</td>\r\n            <td>{professorName}</td>\r\n            <td>\r\n            <LectureAddButton\r\n                currentLectures={currentLectures} // 전체 데이터\r\n                lectureItem={lectureItem}         // 현재 데이터\r\n                lectureAdd={lectureAdd}           // func(강의 Add)\r\n            />\r\n            </td>\r\n        </tr>\r\n    );\r\n    }\r\n}\r\n\r\n// function Lecture({\r\n//      lectureIdx,\r\n//      lectureName,\r\n//      lectureSemester,\r\n//      lectureDate,\r\n//      professorName,\r\n//      lectureCode,\r\n//      lectureAdd,\r\n//      currentLectures\r\n//     }) {\r\n    \r\n//     const lectureItem = {\r\n//     Item: {\r\n//         lectureIdx: lectureIdx,\r\n//         lectureName: lectureName,\r\n//         lectureSemester: lectureSemester,\r\n//         lectureDate: lectureDate,\r\n//         professorName: professorName,\r\n//         lectureCode: lectureCode,\r\n//         selected: false\r\n//     }};\r\n\r\n//     return (\r\n//         <tr className=\"lecture\">\r\n//             <td>{lectureItem.Item.lectureIdx}</td>\r\n//             <td>{lectureItem.Item.lectureCode}</td>\r\n//             <td>{lectureItem.Item.lectureName}</td>\r\n//             <td>{lectureItem.Item.lectureSemester}</td>\r\n//             <td>{lectureItem.Item.lectureDate}</td>\r\n//             <td>{lectureItem.Item.professorName}</td>\r\n//             <td>\r\n//             <LectureAddButton\r\n//                 key={lectureItem.Item.lectureIdx}\r\n//                 lectureItem={lectureItem}\r\n//                 lectureAdd={lectureAdd}\r\n//                 currentLectures={currentLectures}\r\n//             />\r\n//             </td>\r\n//         </tr>\r\n//     );\r\n// }\r\n\r\n// // http://13.125.253.127:8080/kpu-schedule/lectureLoading/G\r\n// Lecture.propTypes = {\r\n//     lectureIdx: PropTypes.string.isRequired,\r\n//     // lectureGubun: PropTypes.string.isRequired,\r\n//     lectureName: PropTypes.string.isRequired,\r\n//     // code: PropTypes.string.isRequired,\r\n//     lectureYear: PropTypes.string.isRequired,\r\n//     lectureSemester: PropTypes.string.isRequired,\r\n//     // lectureDate: PropTypes.string.isRequired,\r\n//     professorName: PropTypes.string.isRequired,\r\n//     lectureCode: PropTypes.string.isRequired\r\n// };\r\n\r\nexport default Lecture;","import React from \"react\";\r\nimport \"../Lecture.css\";\r\n\r\nconst LectureAddTemplate = ({ children }) => {\r\n\r\n   return (\r\n    <table>\r\n        <thead>\r\n        <tr>\r\n            <th width=\"70\">No</th>\r\n            <th>강의코드</th>\r\n            <th>강의명</th>\r\n            <th width=\"70\">학기</th>\r\n            <th>강의시간</th>\r\n            <th width=\"120\">강의실</th>\r\n            <th width=\"120\">교수이름</th>\r\n            <th width=\"120\"></th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n            {children}\r\n        </tbody>\r\n    </table>\r\n   );\r\n}\r\n\r\nexport default LectureAddTemplate;","import React from \"react\";\r\n\r\nconst LectureRemoveButton = ({currentLectures, lectureIdx, lectureRemove}) => {\r\n    \r\n    return (\r\n        <button className=\"button-design-small\" onClick={(event) => {\r\n            const index = currentLectures.findIndex(lecture => \r\n                lecture.lectureIdx === lectureIdx);\r\n            currentLectures[index].selected = false;\r\n\r\n            lectureRemove(lectureIdx);\r\n        }}\r\n        >&times;</button>\r\n    );\r\n};\r\n\r\nexport default LectureRemoveButton;","import React , { Component } from \"react\";\r\nimport LectureRemoveButton from \"./LectureRemoveButton\";\r\nimport \"../Lecture.css\";\r\n\r\nclass LectureItem extends Component {\r\n    render() {\r\n        const {\r\n            lectureIdx,\r\n            lectureName,\r\n            lectureSemester,\r\n            lectureDate,\r\n            lectureLocation,\r\n            professorName,\r\n            lectureCode,\r\n            lectureRemove,\r\n            currentLectures\r\n        } = this.props;\r\n\r\n        return (\r\n            <tr className=\"lecture\">\r\n                <td>{lectureIdx}</td>\r\n                <td>{lectureCode}</td>\r\n                <td>{lectureName}</td>\r\n                <td>{lectureSemester}</td>\r\n                <td>{lectureDate}</td>\r\n                <td>{lectureLocation}</td>\r\n                <td>{professorName}</td>\r\n                <td>\r\n                <LectureRemoveButton \r\n                    lectureIdx={lectureIdx}\r\n                    lectureRemove={lectureRemove}\r\n                    currentLectures={currentLectures}\r\n                />\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\nexport default LectureItem;","import React , { Component } from \"react\";\r\nimport LectureItem from \"./LectureItem\";\r\n\r\nclass LectureList extends Component {\r\n\r\n    render() {\r\n        const { lectureItems, isItemAdd, lectureRemove, currentLectures } = this.props;\r\n\r\n        return (\r\n            lectureItems.map(lecture => (\r\n            <LectureItem\r\n                key={lecture.Item.lectureIdx}\r\n                lectureIdx={lecture.Item.lectureIdx}\r\n                lectureName={lecture.Item.lectureName}\r\n                lectureSemester={lecture.Item.lectureSemester}\r\n                lectureDate={lecture.Item.lectureDate}\r\n                lectureLocation={lecture.Item.lectureLocation}\r\n                professorName={lecture.Item.professorName}\r\n                lectureCode={lecture.Item.lectureCode}\r\n                lectureRemove={lectureRemove}\r\n                isItemAdd={isItemAdd}\r\n                currentLectures={currentLectures}\r\n            />\r\n            ))\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default LectureList;","import * as React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { ViewState } from '@devexpress/dx-react-scheduler';\r\nimport {\r\n  Scheduler,\r\n  Resources,\r\n  WeekView,\r\n  Appointments,\r\n  AppointmentTooltip,\r\n} from '@devexpress/dx-react-scheduler-material-ui';\r\nimport '../App.css';\r\n\r\nexport default class TimeTableTemplate extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      mainResourceName: 'location',\r\n      resources: [\r\n        {\r\n          fieldName: 'location',\r\n          title: '강의실',\r\n          instances: [\r\n            { id: 'Room 1', text: \"강의실\"},\r\n            { id: 'Room 2', text: \"강의실\"},\r\n            { id: 'Room 3', text: \"강의실\"},\r\n            { id: 'Room 4', text: \"강의실\"},\r\n            { id: 'Room 5', text: \"강의실\"},\r\n            { id: 'Room 6', text: \"강의실\"},\r\n            { id: 'Room 7', text: \"강의실\"},\r\n            { id: 'Room 8', text: \"강의실\"},\r\n            { id: 'Room 9', text: \"강의실\"},\r\n            { id: 'Room 10', text: \"강의실\"}\r\n          ],\r\n        },\r\n        { // 교수이름\r\n          fieldName: 'members',\r\n          title: '교수명',\r\n          allowMultiple: false,\r\n          instances: [\r\n            { id: 1, text: '교수명' }\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n\r\n    this.changeMainResource = this.changeMainResource.bind(this);\r\n  }\r\n\r\n  changeMainResource(mainResourceName) {\r\n    this.setState({ mainResourceName });\r\n  }\r\n\r\n  render() {\r\n    const { data, resources, mainResourceName } = this.state;\r\n    const {\r\n      lectureItems,\r\n      isMakeTable\r\n    } = this.props;\r\n    const dayNum = {\r\n      \"월\": {id: 3},\r\n      \"화\": {id: 4},\r\n      \"수\": {id: 5},\r\n      \"목\": {id: 6},\r\n      \"금\": {id: 7},\r\n    }\r\n    if(isMakeTable) {\r\n      const appointment = [];\r\n      let dateLen, startTime1, endTime1, startTime2, endTime2;\r\n      let __day, __startHour, __endHour, __startMin, __endMin; \r\n\r\n      for(let i = 0; i < lectureItems.length; i++) {\r\n        dateLen = lectureItems[i].Item.lectureDate.length;\r\n\r\n        if(dateLen < 40) {\r\n          __day = lectureItems[i].Item.lectureDate[0];\r\n          startTime1 = lectureItems[i].Item.lectureDate.split(']')[1].split('~')[0].trim();\r\n          __startHour = startTime1.split(\":\")[0];\r\n          __startMin = startTime1.split(\":\")[1];\r\n          endTime1 = lectureItems[i].Item.lectureDate.split(']')[1].split('~')[1].trim();\r\n          __endHour = endTime1.split(\":\")[0];\r\n          __endMin = endTime1.split(\":\")[1];\r\n        }\r\n\r\n        if(dateLen > 40) {\r\n          __day = lectureItems[i].Item.lectureDate[0];\r\n\r\n          startTime1 = lectureItems[i].Item.lectureDate.split(']')[1].split('~')[0].trim();\r\n          __startHour = startTime1.split(\":\")[0];\r\n          __startMin = startTime1.split(\":\")[1];\r\n          endTime1 = lectureItems[i].Item.lectureDate.split(']')[1].split('~')[1].substring(0,5).trim();\r\n          __endHour = endTime1.split(\":\")[0];\r\n          __endMin = endTime1.split(\":\")[1];\r\n          \r\n          appointment.push(\r\n            {\r\n              title: lectureItems[i].Item.lectureName,\r\n              startDate: new Date(2020, 1, dayNum[__day].id, __startHour, __startMin),\r\n              endDate: new Date(2020, 1, dayNum[__day].id, __endHour, __endMin),\r\n              id: 1,\r\n              members: 1,\r\n              location: 'Room '+(i+1)\r\n            }\r\n          );\r\n          \r\n          __day = lectureItems[i].Item.lectureDate.split(']')[1].split('~')[1].substring(5,7).trim();\r\n          startTime2 = lectureItems[i].Item.lectureDate.split(']')[2].split('~')[0].trim();\r\n          __startHour = startTime2.split(\":\")[0];\r\n          __startMin = startTime2.split(\":\")[1];\r\n          endTime2 = lectureItems[i].Item.lectureDate.split(']')[2].split('~')[1].trim();\r\n          __endHour = endTime2.split(\":\")[0];\r\n          __endMin = endTime2.split(\":\")[1];\r\n\r\n          // console.log(dateLen+\": 1->\"+startTime1+\" \"+endTime1);\r\n          // console.log(dateLen+\": 2->\"+startTime2+\" \"+endTime2);\r\n        }\r\n        appointment.push(\r\n          {\r\n            title: lectureItems[i].Item.lectureName,\r\n            startDate: new Date(2020, 1, dayNum[__day].id, __startHour, __startMin),\r\n            endDate: new Date(2020, 1, dayNum[__day].id, __endHour, __endMin),\r\n            id: 1,\r\n            members: 1,\r\n            location: 'Room '+(i+1)\r\n          }\r\n        );\r\n        // resources[0].instances[i].text = lectureItems[i].Item.lectureLocation;\r\n        // resources[1].instances[i].text = lectureItems[i].Item.professorName;\r\n      }\r\n      if(data.length === 0) {\r\n        this.setState({ data: appointment });\r\n      }\r\n    }\r\n                     \r\n    return (\r\n      <div className=\"timeTable-contents\">\r\n        \r\n        {/* <ResourceSwitcher\r\n          resources={resources}\r\n          mainResourceName={mainResourceName}\r\n          onChange={this.changeMainResource}\r\n        /> */}\r\n\r\n        <Paper>\r\n          <Scheduler\r\n            data={data}\r\n            height={600}\r\n            >\r\n            <ViewState\r\n              defaultCurrentDate=\"2020-02-08\"\r\n            />\r\n            <WeekView\r\n              excludedDays={[0,6]}\r\n              startDayHour={8}\r\n              endDayHour={23.5}\r\n            >\r\n            </WeekView>\r\n            \r\n            <Appointments />\r\n            <AppointmentTooltip />\r\n            <Resources\r\n              data={resources}\r\n              mainResourceName={mainResourceName}\r\n            />\r\n          </Scheduler>\r\n        </Paper>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from \"react\";\r\n\r\n\r\nconst Major = ({ lectures, changeMajor }) => {\r\n    const majors = [\r\n        {\r\n            majorName: \"전공을 선택하세요\",\r\n            majorCode: \"\",\r\n        },\r\n        {\r\n            majorName: \"전체\",\r\n            majorCode: \"\",\r\n        },\r\n        {\r\n            majorName: \"컴퓨터공학부\",\r\n            majorCode: \"ACS\",\r\n        },{\r\n            majorName: \"기계공학과\",\r\n            majorCode: \"AME\",\r\n        },{\r\n            majorName: \"기계설계공학과\",\r\n            majorCode: \"AMD\",\r\n        },{\r\n            majorName: \"메카트로닉스공학과\",\r\n            majorCode: \"AAE\",\r\n        },{\r\n            majorName: \"전자공학부\",\r\n            majorCode: \"AEE\",\r\n        },{\r\n            majorName: \"게임공학부\",\r\n            majorCode: \"AMM\",\r\n        },{\r\n            majorName: \"신소재공학과\",\r\n            majorCode: \"AMT\",\r\n        },{\r\n            majorName: \"생명화학공학과\",\r\n            majorCode: \"ACH\",\r\n        },{\r\n            majorName: \"디자인학부\",\r\n            majorCode: \"AID\",\r\n        },{\r\n            majorName: \"경영학부\",\r\n            majorCode: \"AEB\",\r\n        },{\r\n            majorName: \"나노광공학과\",\r\n            majorCode: \"ANO\",\r\n        },{\r\n            majorName: \"에너지전기공학과\",\r\n            majorCode: \"AEN\",\r\n        },{\r\n            majorName: \"교양기초교육원\",\r\n            majorCode: \"AAK\", /// AAJ(현장)\r\n        }\r\n    ];\r\n\r\n    // const majorLectures = [];\r\n    // lectures.map(lecture => {\r\n    //     if(lecture.lectureCode.includes(\"AAK\")) {\r\n    //         majorLectures.push(lecture);\r\n    //     }\r\n    // });\r\n    // console.log(majorLectures);\r\n\r\n    return (\r\n        <select className=\"maj-selector\" onChange={(event) => {\r\n                changeMajor(event.target.value);\r\n            }}>\r\n            {majors.map(major => (\r\n                <option key={major.majorName} value={major.majorCode}>\r\n                    {major.majorName}\r\n                </option>\r\n            ))}\r\n        </select>\r\n    );\r\n};\r\n\r\n// Major.propTypes = {\r\n//     temp: PropTypes.number.isRequired,\r\n//     condition: PropTypes.oneOf([\r\n//         \"컴퓨터공학부\",\r\n//         \"기계공학과\", \r\n//         \"기계설계공학과\",\r\n//         \"메카트로닉스공학과\",\r\n//         \"전자공학부\",\r\n//         \"게임공학부\",\r\n//         \"신소재공학과\",\r\n//         \"생명화학공학과\",\r\n//         \"디자인학부\",\r\n//         \"경영학부\",\r\n//         \"나노광공학과\",\r\n//         \"에너지전기공학과\",\r\n//         \"교양기초교육원\"\r\n//     ]).isRequired\r\n// };\r\n\r\n// const styles = StyleSheet.create({\r\n//     container: {\r\n//         flex: 1\r\n//       },\r\n//       temp: {\r\n//         fontSize: 42,\r\n//         color: \"white\"\r\n//       },\r\n//       halfContainer: {\r\n//         flex: 1,\r\n//         justifyContent: \"center\",\r\n//         alignItems: \"center\"\r\n//       },\r\n//       title: {\r\n//         color: \"white\",\r\n//         fontSize: 44,\r\n//         fontWeight: \"300\",\r\n//         marginBottom: 10,\r\n//         textAlign: \"left\"\r\n//       },\r\n//       subtitle: {\r\n//         fontWeight: \"600\",\r\n//         color: \"white\",\r\n//         fontSize: 24,\r\n//         textAlign: \"left\"\r\n//       },\r\n//       textContainer: {\r\n//         alignItems: \"flex-start\",\r\n//         paddingHorizontal: 40,\r\n//         justifyContent: \"center\",\r\n//         flex: 1\r\n//       }\r\n// });\r\n\r\nexport default Major","import React from 'react';\r\nimport './App.css';\r\n\r\nconst Pagination = ({ currentPage, postsPerPage, totalPosts, paginate }) => {\r\n    \r\n    const totalPage = [];\r\n    \r\n    for(let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\r\n        totalPage.push(i);\r\n    }\r\n\r\n    return (\r\n    <div className=\"pagination_box\">\r\n        <ul className=\"pagination\">\r\n            <li className=\"page-item\">\r\n                <button onClick={() => {\r\n                    if(currentPage === 1) return;\r\n                    currentPage = currentPage - 1;\r\n                    paginate(currentPage);\r\n                }} className=\"button-design-small\">\r\n                    &lt;\r\n                </button>\r\n            </li>\r\n            <li className=\"page-item\">\r\n                {currentPage}/{totalPage.length}\r\n            </li>\r\n            <li className=\"page-item\">\r\n                <button onClick={() => {\r\n                    if(currentPage === totalPage.length) return;\r\n                    currentPage = currentPage + 1;\r\n                    paginate(currentPage);\r\n                }} className=\"button-design-small\">\r\n                    &gt;\r\n                </button>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n    );\r\n\r\n    // return (\r\n    //  <div className=\"pagination_box\">\r\n    //   <ul className=\"pagination\">\r\n    //       {pageNumbers.map(number => (\r\n    //         <li key={number} className=\"page-item\">\r\n    //             <a onClick={() => paginate(number)} href=\"#\" className=\"page-link\">\r\n    //                 {number}\r\n    //             </a>\r\n    //         </li>\r\n    //       ))}\r\n    //   </ul>\r\n    // </div>\r\n    // );\r\n};\r\n\r\nexport default Pagination","import React from 'react';\nimport axios from \"axios\";\nimport Lecture from \"./Lecture\";\nimport LectureAddTemplate from \"./LectureAdd/LectureAddTemplate\";\nimport LectureList from \"./LectureAdd/LectureList\";\nimport TimeTableTemplate from \"./TimeTable/TimeTableTemplate\";\nimport Major from \"./Major\";\nimport Pagination from \"./Pagination\";\nimport './App.css';\nimport './Controller.css';\n\n\nclass App extends React.Component {\n\n  state = {\n    url: \"https://raw.githubusercontent.com/doorisopen/kpu-schedule-app/master/data/\",\n    gubun: \"A.json\",    // sch A, G\n    currentMajor: \"ALL\",\n    currentPage: 1,\n    postsPerPage: 15,   // post per 15\n    btn1Disabled: true,// button 1 enabled\n    btn2Disabled: false, // button 2 disabled\n    btn1Color: true,\n    btn2Color: false, \n    isLoading: true, // 데이터 로딩\n    majorLectureLoading: false, // 전공 데이터 로딩\n    isMakeTable: false,\n    lectures: [],       // 전공 별 데이터 (변동)\n    lecturesSave: [],   // 초기 전체 데이터 (고정)\n    lectureItems: []    // 강의 추가 데이터 (변동)\n  };\n\n  // async: 이 함수가 비동기라는것을 말해주는것이고 await은 axios로 fetch 해온 data를 모두 로드 할때 까지 기다리라는 말임\n  getLectures = async() => {\n    const { url, gubun } = this.state;\n    const settingData = [];\n    const {\n      data : { \n        lectures \n      }\n    /* AWS Server */ \n    // http://13.125.253.127:8080/kpu-schedule/\n    //\"https://raw.githubusercontent.com/doorisopen/kpu-schedule-app/master/data/A.json\"\n    } = await axios.get( url + gubun );\n\n    // 배열 요소(selected: false) 추가 한다.\n    lectures.forEach(lecture => {\n      settingData.push({...lecture, selected: false});\n    });\n\n    // state-> lectures:lectures <- axios에서 가져온 lectures임\n    this.setState({ lectures: settingData, lecturesSave: settingData, isLoading: false });\n  };\n\n  getMajorLectures = async() => {\n    const majorLectures = [];\n    const { currentMajor, lectures } = this.state;\n    \n    lectures.forEach(lecture => {\n      if(lecture.lectureCode.includes(currentMajor)) {\n          majorLectures.push(lecture);\n      }\n    });\n    \n    this.setState({ lectures: majorLectures, isLoading: false, majorLectureLoading: false});\n\n  };\n\n  // componentDidMount: component가 생성되고 호출되는 life Cycle\n  componentDidMount() {\n    this.getLectures();\n  }\n  \n  // componentDidUpdate: setState가 되면 호출되는 life Cycle 제어문이 없으면 무한 루프돌 위험이있음\n  componentDidUpdate() {\n    if(this.state.isLoading && !this.state.majorLectureLoading) {\n      this.getLectures();\n    }\n    if(this.state.isLoading && this.state.majorLectureLoading) {\n      this.getMajorLectures();\n    }\n  }\n\n  // Controller 대학, 대학원 disable, enable event\n  onChangeButton1(event) {\n    if (event.target.onclick) {\n      this.setState({ btn2Disabled: false, btn2Color: false});\n      this.setState({ btn1Disabled: true, btn1Color: true}); \n    }\n  }\n  onChangeButton2(event) {\n    if (event.target.onclick) {\n      this.setState({ btn1Disabled: false, btn1Color: false});\n      this.setState({ btn2Disabled: true, btn2Color: true});\n    }\n  }\n  onMakeTimeTableButton(event) {\n    if (event.target.onclick) {\n      this.setState({isMakeTable: true});   \n    }\n  }\n\n  render() {\n    // Get state\n    const { \n      currentPage, \n      postsPerPage, \n      isLoading,\n      isMakeTable,\n      lectures, \n      lecturesSave, \n      currentMajor, \n      lectureItems\n    } = this.state;\n\n    // Get current lectures\n    const indexOfLastLecture = currentPage * postsPerPage;\n    const indexOfFirstLecture = indexOfLastLecture - postsPerPage;\n    const currentLectures = lectures.slice(indexOfFirstLecture, indexOfLastLecture);\n\n    // Change Page\n    const paginate = (pageNumber) => this.setState({ currentPage: pageNumber });\n    // Chage btn Color\n    const btn1Selected = this.state.btn1Color ? \"#29b6f6\" : \"black\";\n    const btn2Selected = this.state.btn2Color ? \"#29b6f6\" : \"black\";\n    \n    // Change Major\n    const changeMajor = (majorCode) => {\n      this.setState({ lectures: lecturesSave, currentMajor: majorCode, currentPage: 1, isLoading: true, majorLectureLoading: true});\n      console.log(\"change Major -->\"+currentMajor);\n    }\n\n    // Lecture Add\n    const lectureAdd = (lectureAddItems) => {\n      this.setState({\n        // lectures: unSelectedLectures,\n        lectureItems: lectureItems.concat(lectureAddItems)\n      });\n    }\n\n    // lecture Remove\n    const lectureRemove = (lectureIdx) => {\n      const { lectureItems } = this.state;\n      this.setState({ \n        lectureItems: lectureItems.filter(lectureItem => lectureItem.Item.lectureIdx !== lectureIdx)\n      });\n    }\n    \n\n    return (\n      <div className=\"lecture-page\">\n        <header className=\"lecture-page-header\">\n          한국산업기술대학교 강의 시간표 만들기\n        </header>\n          <section className=\"lecture-container\">\n            {isLoading ? (\n              <div className=\"loader\">\n                Loading...\n              </div>\n              ) : (\n                <div className=\"lecture-contents\">\n                  {/* {s} Controller */}\n                  <div className=\"lecture-controller\">\n                    <div className=\"controller-item\">\n                      <Major \n                        lectures={lectures}\n                        changeMajor={changeMajor}\n                      />\n                    </div>\n                    <div className=\"controller-item\">\n                      <button className=\"controller-button\" onClick={(event) => {\n                          this.setState({ lectures: [], currentPage: 1, gubun: \"A.json\", isLoading: true});\n                          this.onChangeButton1(event);\n                        }}\n                        style={{borderColor: btn1Selected}}\n                        disabled={this.state.btn1Disabled}\n                      >\n                          학부(대학교)\n                      </button>\n                      <button className=\"controller-button\" onClick={(event) => {\n                          this.setState({ lectures: [], currentPage: 1, gubun: \"G.json\", isLoading: true});\n                          this.onChangeButton2(event);\n                        }}\n                        style={{borderColor: btn2Selected}}\n                        disabled={this.state.btn2Disabled}\n                      >\n                        석사(대학원)\n                      </button>\n                    </div>\n                  </div>\n                  {/* {e} Controller */}\n                  <table>\n                    <thead>\n                      <tr>\n                          <th width=\"70\">No</th>\n                          <th>강의코드</th>\n                          <th>강의명</th>\n                          <th width=\"70\">학기</th>\n                          <th>강의시간</th>\n                          <th width=\"120\">강의실</th>\n                          <th width=\"120\">교수이름</th>\n                          <th width=\"120\"></th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {currentLectures.map(lecture => (\n                        <Lecture\n                          key={lecture.lectureIdx}\n                          lectureIdx={lecture.lectureIdx}\n                          lectureGubun={lecture.lectureGubun} \n                          lectureName={lecture.lectureName} \n                          code={lecture.code} \n                          lectureYear={lecture.lectureYear} \n                          lectureSemester={lecture.lectureSemester}\n                          lectureDate={lecture.lectureDate}\n                          lectureLocation={lecture.lectureLocation}\n                          professorName={lecture.professorName}\n                          lectureCode={lecture.lectureCode}\n                          selected={lecture.selected}\n                          lectureAdd={lectureAdd}\n                          currentLectures={currentLectures}\n                        />\n                      ))}\n                    </tbody>\n                  </table>\n                  <Pagination \n                    currentPage={currentPage}\n                    postsPerPage={postsPerPage} \n                    totalPosts={lectures.length} \n                    paginate={paginate} />\n                </div>\n            )}\n              <div className=\"lecture-contents\">\n                <LectureAddTemplate>\n                  <LectureList\n                    key = {lectureItems}\n                    lectureItems = {lectureItems}\n                    lectureRemove = {lectureRemove}\n                    currentLectures={currentLectures}\n                  />\n                </LectureAddTemplate>\n                <div className=\"div-makeTimeTable\">\n                  <button className=\"button-design\" onClick={(event) => {\n                    this.onMakeTimeTableButton(event);\n                  }}\n                  >\n                    시간표 만들기\n                  </button>\n                </div>\n              </div>\n              {isMakeTable ? (\n              <div className=\"timeTable-container\">\n                <TimeTableTemplate\n                  lectureItems = {lectureItems}\n                  isMakeTable = {isMakeTable}\n                >\n                </TimeTableTemplate>\n              </div>\n              ) : ( \n              <div className=\"timeTable-container\">\n              </div>\n              )}\n          </section>\n        <footer className=\"lecture-page-footer\">\n          github. https://github.com/doorisopen\n        </footer>\n      </div>\n    );\n  }\n\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}
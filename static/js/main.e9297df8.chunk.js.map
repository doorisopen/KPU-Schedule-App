{"version":3,"sources":["Lecture.js","Pagination.js","App.js","index.js"],"names":["Lecture","lectureIdx","lectureName","lectureSemester","lectureDate","professorName","lectureCode","className","Pagination","currentPage","postsPerPage","totalPosts","paginate","totalPage","i","Math","ceil","push","onClick","href","length","App","state","url","gubun","isLoading","lectures","getLectures","a","async","axios","get","data","setState","this","indexOfLastLecture","indexOfFirstLecture","currentLectures","slice","width","map","lecture","key","lectureGubun","code","lectureYear","pageNumber","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e9297df8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Lecture.css\";\r\n\r\n\r\nfunction Lecture({lectureIdx,\r\n     lectureName,\r\n     lectureSemester,\r\n     lectureDate,\r\n     professorName,\r\n     lectureCode\r\n    }) {\r\n    return (\r\n        <tr className=\"lecture\">\r\n            <td>{lectureIdx}</td>\r\n            <td>{lectureCode}</td>\r\n            <td>{lectureName}</td>\r\n            <td>{lectureSemester}</td>\r\n            <td>{lectureDate}</td>\r\n            <td>{professorName}</td>\r\n            <td>과목 선택</td>\r\n        </tr>\r\n    );\r\n}\r\n\r\n// http://13.125.253.127:8080/kpu-schedule/lectureLoading/G\r\nLecture.propTypes = {\r\n    lectureIdx: PropTypes.string.isRequired,\r\n    // lectureGubun: PropTypes.string.isRequired,\r\n    lectureName: PropTypes.string.isRequired,\r\n    // code: PropTypes.string.isRequired,\r\n    lectureYear: PropTypes.string.isRequired,\r\n    lectureSemester: PropTypes.string.isRequired,\r\n    // lectureDate: PropTypes.string.isRequired,\r\n    professorName: PropTypes.string.isRequired,\r\n    lectureCode: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Lecture;","import React from 'react';\r\n\r\n\r\n\r\n\r\nconst Pagination = ({ currentPage, postsPerPage, totalPosts, paginate }) => {\r\n    \r\n    const totalPage = [];\r\n    \r\n    for(let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\r\n        totalPage.push(i);\r\n    }\r\n\r\n    return (\r\n    <div className=\"pagination_box\">\r\n        <ul className=\"pagination\">\r\n            <li className=\"page-item\">\r\n                <a onClick={() => {\r\n                    if(currentPage === 1) return;\r\n                    currentPage = currentPage - 1;\r\n                    paginate(currentPage);\r\n                }} href=\"#\" className=\"page-link\">\r\n                    이전페이지\r\n                </a>\r\n            </li>\r\n            <li className=\"page-item\">\r\n                {currentPage}/{totalPage.length}\r\n            </li>\r\n            <li className=\"page-item\">\r\n                <a onClick={() => {\r\n                    if(currentPage === totalPage.length) return;\r\n                    currentPage = currentPage + 1;\r\n                    paginate(currentPage);\r\n                }} href=\"#\" className=\"page-link\">\r\n                    다음페이지\r\n                </a>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n    );\r\n\r\n    // return (\r\n    //  <div className=\"pagination_box\">\r\n    //   <ul className=\"pagination\">\r\n    //       {pageNumbers.map(number => (\r\n    //         <li key={number} className=\"page-item\">\r\n    //             <a onClick={() => paginate(number)} href=\"#\" className=\"page-link\">\r\n    //                 {number}\r\n    //             </a>\r\n    //         </li>\r\n    //       ))}\r\n    //   </ul>\r\n    // </div>\r\n    // );\r\n};\r\n\r\nexport default Pagination","import React from 'react';\nimport axios from \"axios\";\nimport Lecture from \"./Lecture\";\nimport Pagination from \"./Pagination\";\nimport './App.css';\n\nclass App extends React.Component {\n\n  state = {\n    url: \"https://raw.githubusercontent.com/doorisopen/kpu-schedule-app/master/data/\",\n    gubun: \"G.json\",\n    currentPage: 1,\n    postsPerPage: 15,\n    isLoading: true,\n    lectures: [],\n  };\n\n  // async: 이 함수가 비동기라는것을 말해주는것이고 await은 axios로 fetch 해온 data를 모두 로드 할때 까지 기다리라는 말임\n  getLectures = async() => {\n    const { url, gubun } = this.state;\n    const {\n      data : { \n        lectures \n      }\n    /* AWS Server */ \n    // http://13.125.253.127:8080/kpu-schedule/\n    // \"https://raw.githubusercontent.com/doorisopen/kpu-schedule-app/master/data/A.json\"\n    } = await axios.get( url + gubun );\n\n    // console.log(lectures);\n    // console.log(\"gubun : \", gubun);\n    \n    // state-> lectures:lectures <- axios에서 가져온 lectures임\n    this.setState({ lectures, isLoading: false });\n  };\n\n  // componentDidMount: component가 생성되고 호출되는 life Cycle\n  componentDidMount() {\n    this.getLectures();\n  }\n\n  componentDidUpdate() {\n    this.getLectures();\n  }\n  render() {\n    const { currentPage, postsPerPage, isLoading, lectures } = this.state;\n\n    // Get current lectures\n    const indexOfLastLecture = currentPage * postsPerPage;\n    const indexOfFirstLecture = indexOfLastLecture - postsPerPage;\n    const currentLectures = lectures.slice(indexOfFirstLecture, indexOfLastLecture);\n\n    // Change Page\n    const paginate = (pageNumber) => this.setState({ currentPage: pageNumber });\n\n    return (\n      <div className=\"lecture-page\">\n        <header className=\"lecture-page-header\">\n          한국산업기술대학교 강의 시간표 만들기\n        </header>\n          <section className=\"lecture-container\">\n            {isLoading ? (\n              <div className=\"loader\">\n                Loading...\n              </div>\n              ) : (\n                <div className=\"lecture-contents\">\n                  <div className=\"lecture-controller\">\n                    controller\n                    <div className=\"controller-item\">학과\n                      <select>\n                        <option>컴퓨터공학부</option>\n                        <option>전자공학부</option>\n                        <option>기계공학부</option>\n                      </select>\n                    </div>\n                    <div className=\"controller-item\">\n                      <a onClick={() => {\n                          this.setState({ lectures: [], currentPage: 1, gubun: \"A.json\", isLoading: true});\n                        }\n                        } href=\"#\">학부(대학교)</a>\n                      <a onClick={() => {\n                          this.setState({ lectures: [], currentPage: 1, gubun: \"G.json\", isLoading: true});\n                        }                 \n                      } href=\"#\">석사(대학원)</a>\n                    </div>\n\n                  </div>\n                  <table>\n                    <thead>\n                      <tr>\n                          <th width=\"70\">No</th>\n                          <th>강의코드</th>\n                          <th>강의명</th>\n                          <th width=\"70\">학기</th>\n                          <th>강의시간</th>\n                          <th width=\"120\">교수이름</th>\n                          <th width=\"120\"></th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {currentLectures.map(lecture => (\n                        <Lecture\n                          key={lecture.lectureIdx}\n                          lectureIdx={lecture.lectureIdx}\n                          lectureGubun={lecture.lectureGubun} \n                          lectureName={lecture.lectureName} \n                          code={lecture.code} \n                          lectureYear={lecture.lectureYear} \n                          lectureSemester={lecture.lectureSemester}\n                          lectureDate={lecture.lectureDate}\n                          professorName={lecture.professorName}\n                          lectureCode={lecture.lectureCode}\n                        />\n                      ))}\n                    </tbody>\n                  </table>\n                  <Pagination \n                    currentPage={currentPage}\n                    postsPerPage={postsPerPage} \n                    totalPosts={lectures.length} \n                    paginate={paginate} />\n                </div>\n              )}\n          </section>\n        <footer className=\"lecture-page-footer\">\n          github. https://github.com/doorisopen\n        </footer>\n      </div>\n    );\n  }\n\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}